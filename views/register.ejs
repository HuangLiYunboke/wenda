<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="stylesheets/bootstrap.min.css" media="screen">
  <title>登录</title>
  <style media="screen">
    body {

      background-image: linear-gradient(rgb(120, 159, 108), #79a06d);
    }

    #box {
      border: 1px solid rgb(200, 200, 200);
      box-shadow: rgba(0, 0, 0, 0.1) 0px 5px 5px 2px;
      background: rgba(120, 159, 108, 0.7);
      border-radius: 4px;
      top: 50px;
    }

    h2 {
      text-align: center;
      color: #fff;
    }
    #myCanvas {
      border: 1px;
      background-color: lavenderblush;
    }
    .container-fluid{
      position: absolute;
      top: 200px;
    }
  </style>
</head>

<body>
    <canvas id="myCanvas"></canvas>
  <div class="container-fluid">
    <div class="row-fluid">
      <div class="col-md-offset-4 col-md-4" id="box">
        <h2 id="h2">Register</h2>
        <hr>
        <form class="form-horizontal" action="/register" method="post" id="contact_form">
          <fieldset>
            <div class="form-group">
              <div class="col-md-12">
                <div class="input-group">
                  <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                  <input name="nname" placeholder="Username" class="form-control" type="text">
                </div>
              </div>
            </div>

            <div class="form-group">
              <div class="col-md-12">
                <div class="input-group">
                  <span class="input-group-addon"><span class="glyphicon glyphicon-phone" aria-hidden="true"></span></span>
                  <input name="name" placeholder="Phone number" class="form-control" type="text">
                </div>
              </div>
            </div>



            <div class="form-group">
              <div class="col-md-12">
                <div class="input-group">
                  <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                  <input name="password" placeholder="Password" class="form-control" type="password" id="pwd">
                </div>
              </div>
            </div>

            <div class="form-group">
              <div class="col-md-12">
                <div class="input-group">
                  <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                  <input name="password1" placeholder="rePassword" class="form-control" type="password" id="pwd1">
                </div>
              </div>
            </div>

            <div class="form-group">
              <div class="col-md-12">
                <label>
                 <input type="checkbox" checked value="">同意并接受<a href="#">服务条款</a>
                </label>
                <button type="button" class="btn btn-md btn-danger pull-right" id="btn">注册</button>
              </div>
            </div>
          </fieldset>
        </form>
      </div>
    </div>
    <script type="text/javascript" src="javascripts/jquery.min.js"></script>
    <script type="text/javascript" src="javascripts/bootstrap.min.js"></script>
    <script type="text/javascript">
    $('#btn').click(() => {
      if($('#pwd').val() === $('#pwd1').val()){
        $('#contact_form').submit();
      }else{
        $('#h2').html("两次密码不一致");
        return false;
      }
    });

      //获取窗口宽高
      var w = window.innerWidth;
      var h = window.innerHeight;

      var canvas = document.getElementById("myCanvas");
      var ctx = canvas.getContext("2d");
      //设置画布宽高与窗口宽高一样
      canvas.width = w;
      canvas.height = h;
      //随机数函数
      function fnRandom(min,max){
        return parseInt((max-min)*Math.random()+min+1)
      }
      function Round(){
        this.r = fnRandom(5,10);
        this.diam = this.r*2;
        //随机位置
        var x = fnRandom(0,canvas.width - this.r);
        this.x = x<this.r?this.r:x;
        var y = fnRandom(0,canvas.height-this.r);
        this.y = y<this.r?this.r:y
        //随机速度
        var speed = fnRandom(2,4)/10
        this.speedX = fnRandom(0,4)>2?speed:-speed;
        this.speedY = fnRandom(0,4)>2?speed:-speed;
        //颜色

        this.color = "#79a06d";
      }
      Round.prototype.draw = function(){
        //绘制函数
        ctx.fillStyle = this.color;
        ctx.beginPath()
        ctx.arc(this.x,this.y,this.r,0,Math.PI*2,true);
        ctx.closePath();
        ctx.fill();
      }
      Round.prototype.move = function(){
        this.x+=this.speedX;
        if(this.x>canvas.width-this.r){
  //				this.speedX*=-1;
        this.x=this.r

        }else if(this.x<this.r){
          this.x=canvas.width-this.r
        }
        this.y+=this.speedY;
        if(this.y>canvas.height-this.r){
  //				this.speedY*=-1;
          this.y=this.r
        }else if(this.y<this.r){
          this.y=canvas.height-this.r
        }
      }
      //使用Round
      var allRound = [];
      function initRound(){
        //初始化30个圆形对象,放到数组中
        for(var i = 0 ; i<40;i++){
          var obj = new Round();
          obj.draw();
          obj.move();
          allRound.push(obj);


        }
      }
      initRound();
      var dxdy = []
      function roundMove(){
        ctx.clearRect(0,0,canvas.width,canvas.height);
        //遍历所有的圆形对象,让对象自己重绘,移动
        for (var i = 0 ;i <allRound.length;i++) {
          var round = allRound[i];
          round.draw();
          round.move();

          dxdy[i]={
            dx:round.x,
            dy:round.y
          };
          var dx = dxdy[i].dx;
          var dy =dxdy[i].dy;
          for (var j=0;j<i;j++) {
            var sx = dxdy[j].dx;
            var sy = dxdy[j].dy;
            l = Math.sqrt((dx-sx)*(dx-sx)+(dy-sy)*(dy-sy));
            var C = 1/l*7-0.009;
            var o = C > 0.03 ? 0.03 : C;
              ctx.strokeStyle = 'rgba(0,0,0,'+ o +')'
          ctx.beginPath()
          ctx.lineWidth=2;
          ctx.moveTo(dxdy[i].dx,dxdy[i].dy)
              ctx.lineTo(dxdy[j].dx,dxdy[j].dy);
            ctx.closePath()
            ctx.stroke()


          }
        }
        window.requestAnimationFrame(roundMove)
      }
      roundMove();
    </script>
</body>
</html>
